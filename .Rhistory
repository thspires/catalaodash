# dias ~15 de cada mes em numeros lineares (1 a 365)
meiodomes <- c()
for(i in 0:11){
dia <- 15*c(i)+(15*c(i+1))
meiodomes <- c(meiodomes,dia)}
# Pegar anos gregorianos que sao usados para o ano hidrologico
levels(as.factor(h$Ano[which(h$Anohidro==112)]))
anogregs <- list()
for(i in 1:max(h$Anohidro)){
anogregs[[i]] <- levels(as.factor(h$Ano[which(h$Anohidro==i)]))}
# BODY
body <- dashboardBody(
fluidRow(
box(width=12,title="Ano atual vs média histórica (desde 1903)",
plotOutput("today")
),
box(width=12,title="Hidrógrafas de todos os anos",
plotOutput("hidrografa"),
sliderInput(inputId="ano",label="Escolha o ano gregoriano",max=2020,min=1903,value=2020)
),
box(width=12,title="Anos hidrologicos",
plotOutput("hidro2"),
sliderInput(inputId="anohidro",label="Escolha o ano hidrologico",max=115,min=min(1),value=115)
)
)
)
# HEADER
header <- dashboardHeader(title="HIDROGRAFIA MEDIO AMAZONAS",
dropdownMenu(type="message",messageItem(from="Desenvolvedor",message="Contate-nos em\n thspires@gmail.com")))
# SIDEBAR
sidebar <- dashboardSidebar(
fluidRow(
box(width=12,title="Cota do dia",
valueBox(
value=cotahj,
color="red",
subtitle="metros",
icon=icon("ship")
)
),
box(width=12,title="Comparacao com ontem",
valueBox(
value=paste(abs(dif)*100,"cm"),
color="fuchsia",
subtitle=paste(sd),
icon=icon(icone)
)
),
box(width=12,title="Comparacao com o mesmo dia do ano passado",
valueBox(
value=paste(abs(dif2)*100,"cm"),
color="fuchsia",
subtitle=paste(sd2),
icon=icon(icone2)
)
)
)
)
# UI
ui <- dashboardPage(skin="red",
HTML('<meta name="viewport" content="width=500, initial-scale=.5">'),
header = header,sidebar = sidebar,body = body)
server <- function(input,output){
load_url("https://github.com/thspires/catalaodash/blob/master/CatalaoData.RData?raw=True")
par(mar=c(4,4,1,1),mgp=c(2.5,.5,.5))
output$today <- renderPlot({
plot(tmp~levels(factor(h$Dia2)),type="l",lwd=4,ylim=c(13.6,30),bty="l",ylab="Cota do rio (m)",axes=F,col="lightgrey",xlab="",cex.lab=1.2)
axis(1,at=meiodomes,labels=levels(h$Mes),col="white",col.ticks="black",cex.axis=1.1)
axis(2)
abline(h=seq(10,30,by=2.5),col="lightgrey",lty=3)
abline(h=c(20,26),col="darkgrey",lty=2)
points(h$Dia2[nrow(h)],h$Cota[nrow(h)],pch=20,col="#275171",cex=2)
lines(Cota~Dia2,subset(h,Ano==2020),lwd=3,col="steelblue")
text(1,26,"Cheia",col="darkgrey") ; text(1,20,"Seca",col="darkgrey")
text(h$Dia2[nrow(h)],h$Cota[nrow(h)]+1,paste(h$Dia[nrow(h)],"de",h$Mes[nrow(h)]),col="#275171")
legend(-10,17,legend=c("2020","Média histórica"),fill=c("steelblue","lightgrey"),border="white",bty="n")
})
output$hidrografa <- renderPlot({
plot(Cota~Dia2,subset(h,Ano==input$ano),type="l",lwd=4,ylim=c(13.6,30),bty="l",ylab="Cota do rio (m)",axes=F,col="black",xlim=c(1,365),xlab="")
axis(1,at=meiodomes,labels=levels(h$Mes),col="white",col.ticks="black",cex.axis=1.1)
axis(2)
abline(h=seq(10,30,by=2.5),col="lightgrey",lty=3)
abline(h=c(20,26),col="darkgrey",lty=2)
text(1,26,"Cheia",col="darkgrey") ; text(1,20,"Seca",col="darkgrey")
lines(tmp~levels(factor(h$Dia2)))
legend(-10,17,legend=c(input$ano,"Média histórica"),fill=c("black","lightgrey"),border="white",bty="n")
})
output$hidro2 <- renderPlot({
plot(Cota~Dia3,subset(h,Anohidro==input$anohidro),type="l",lwd=4,ylim=c(13.6,30),bty="l",ylab="Cota do rio (m)",axes=F,col="black",xlab="Dias hidrológicos (inicia no 1o dia de seca)")
text(1,30,paste(anogregs[[input$anohidro]],collapse=" e "),pos=4)
lines(tmp2~levels(factor(h$Dia3)),col="lightgrey")
axis(1);axis(2)
grid(col ="darkgrey")
legend(1,30,legend=c(input$anohidro,"Media histórica"),fill=c("black","lightgrey"),border="white",bty="n")
})
}
#
shinyApp(ui, server)
h
View(h)
?deployApp
?reactiveFileReader
??readFunc
# Ajustar anos hidrologicos
rm(list=ls())
h <- read.csv("/Users/tiagopires/Desktop/Catalao dashboard/Catalao Data/Cotas.csv")
init <- as.numeric(tapply(rownames(h),h$Anohidro,min))
h$Dia3 <- NA
for(i in 1:max(h$Anohidro)){
h$Dia3[which(h$Anohidro==i)] <- 1:length(h$Dia3[which(h$Anohidro==i)])
}
h$Dia3[init]
rm(list=ls())
h <- read.csv("/Users/tiagopires/Desktop/Catalao dashboard/Catalao Data/Cotas.csv")
init <- as.numeric(tapply(rownames(h),h$Anohidro,min))
?rsconnect
# Read historical dataset of stage levels
h <- read.csv("https://raw.githubusercontent.com/thspires/catalaodash/master/Cotas.csv")
paste(h$Mes,h$Ano,sep="-")
# # # #
# Begin data scraping from portodemanaus
temp <- read_html(html_session("https://www.portodemanaus.com.br/?pagina=nivel-do-rio-negro-hoje"))
temp <- html_table(temp,fill=T)
ano <- gsub(".+de ","",temp[[2]][2,9])
temp <- data.frame(temp[[8]])
temp <- temp[,grep("Cota",temp[2,])]
names(temp) <- temp[1,]
temp <- temp[-c(1,2,34:38),]
temp$dia <- c(1:31)
temp <- melt(temp,id=c("dia"))
temp$value <- as.numeric(gsub(",","\\.",temp$value))
temp <- temp[!is.na(temp$value),]
temp <- temp[!is.na(temp$value),]
temp <- subset(temp,value!=0.00)
head(temp)
names(temp) <- c("Dia","Mes","Cota")
temp$Ano <- ano
temp <- temp[,c(2,1,4,3)]
temp$Estacao <- NA
temp$Estacao[is.na(temp$Estacao) & temp$Cota>26] <- "Cheia"
temp$Estacao[is.na(temp$Estacao) & temp$Cota<20] <- "Seca"
temp$Estacao[is.na(temp$Estacao) & temp$Cota>20 & temp$Cota < 26 & temp$Dia2 <150] <- "Enchente"
temp$Estacao[is.na(temp$Estacao)] <- "Cheia"
temp$Dia2 <- (h$Dia2[nrow(h)]+1) : (h$Dia2[nrow(h)]+nrow(temp))
temp$Anohidro <- h$Anohidro[nrow(h)]
h <- rbind(h,temp)
h$Dia3 <- NA; for(i in 1:max(h$Anohidro)){h$Dia3[which(h$Anohidro==i)] <- 1:length(h$Dia3[which(h$Anohidro==i)])}
h$Mes <- factor(h$Mes,levels=c("Janeiro","Fevereiro","Marco","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro"))
h$Ano <- as.numeric(h$Ano)
h$Anohidro <- as.numeric(h$Anohidro)
# Calcular medias para fazer hidrografa da serie historica
tmp <- tapply(h$Cota,h$Dia2,mean)
tmp2 <- tapply(h$Cota,h$Dia3,mean)
# Cota de hoje e diferenca com ontem
cotahj <- h$Cota[nrow(h)]
cotaontem <- h$Cota[nrow(h)-1]
dif <- round(cotahj - cotaontem,digits=2)
icone <- if (dif>0) "arrow-up" else "arrow-down"
sd <- if (dif>0) "subiu" else "desceu"
# Diferenca com o mesmo dia do ano paassado
anopassado <- h$Ano[nrow(h)]-1
hj_dia <- h$Dia2[nrow(h)]
subset(h,Ano=="2019" & Dia2==274)
cotaanopassado <- h[which(h$Ano==anopassado & h$Dia2==hj_dia),"Cota"]
dif2 <- round(cotahj - cotaanopassado,digits=2)
icone2 <- if (dif2>0) "arrow-up" else "arrow-down"
sd2 <- if (dif2>0) "mais alto" else "mais baixo"
# save this as .Rdata
save.image(file="/Users/tiagopires/Desktop/Catalao dashboard/Catalao Data/CatalaoData.RData")
# # #
# Add into github
setwd("/Users/tiagopires/Desktop/Catalao dashboard/Catalao Data")
system("git add .")
# Commiting
msg <- paste0("'Update of ",gsub(" .+","",Sys.time())," 2'")
system(paste("git commit -m",msg))
# Pushing
system("git push -u origin master")
# rm(list=ls());dev.off()
library(shiny)
library(shinydashboard)
library(rvest)
library(reshape2)
load_url <- function (url, ..., sha1 = NULL) {
# based very closely on code for devtools::source_url
stopifnot(is.character(url), length(url) == 1)
temp_file <- tempfile()
on.exit(unlink(temp_file))
request <- httr::GET(url)
httr::stop_for_status(request)
writeBin(httr::content(request, type = "raw"), temp_file)
file_sha1 <- digest::digest(file = temp_file, algo = "sha1")
if (is.null(sha1)) {
message("SHA-1 hash of file is ", file_sha1)
}
else {
if (nchar(sha1) < 6) {
stop("Supplied SHA-1 hash is too short (must be at least 6 characters)")
}
file_sha1 <- substr(file_sha1, 1, nchar(sha1))
if (!identical(file_sha1, sha1)) {
stop("SHA-1 hash of downloaded file (", file_sha1,
")\n  does not match expected value (", sha1,
")", call. = FALSE)
}
}
load(temp_file, envir = .GlobalEnv)
}
load_url("https://github.com/thspires/catalaodash/blob/master/CatalaoData.RData?raw=True")
# Para fazer a legenda do grafico com os meses em portugues
# dias ~15 de cada mes em numeros lineares (1 a 365)
meiodomes <- c()
for(i in 0:11){
dia <- 15*c(i)+(15*c(i+1))
meiodomes <- c(meiodomes,dia)}
# Pegar anos gregorianos que sao usados para o ano hidrologico
levels(as.factor(h$Ano[which(h$Anohidro==112)]))
anogregs <- list()
for(i in 1:max(h$Anohidro)){
anogregs[[i]] <- levels(as.factor(h$Ano[which(h$Anohidro==i)]))}
# BODY
body <- dashboardBody(
fluidRow(
box(width=12,title="Ano atual vs média histórica (desde 1903)",
plotOutput("today")
),
box(width=12,title="Hidrógrafas de todos os anos",
plotOutput("hidrografa"),
sliderInput(inputId="ano",label="Escolha o ano gregoriano",max=2020,min=1903,value=2020)
),
box(width=12,title="Anos hidrologicos",
plotOutput("hidro2"),
sliderInput(inputId="anohidro",label="Escolha o ano hidrologico",max=115,min=min(1),value=115)
)
)
)
# HEADER
header <- dashboardHeader(title="HIDROGRAFIA MEDIO AMAZONAS",
dropdownMenu(type="message",messageItem(from="Desenvolvedor",message="Contate-nos em\n thspires@gmail.com")))
# SIDEBAR
sidebar <- dashboardSidebar(
fluidRow(
box(width=12,title="Cota do dia",
valueBox(
value=cotahj,
color="red",
subtitle="metros",
icon=icon("ship")
)
),
box(width=12,title="Comparacao com ontem",
valueBox(
value=paste(abs(dif)*100,"cm"),
color="fuchsia",
subtitle=paste(sd),
icon=icon(icone)
)
),
box(width=12,title="Comparacao com o mesmo dia do ano passado",
valueBox(
value=paste(abs(dif2)*100,"cm"),
color="fuchsia",
subtitle=paste(sd2),
icon=icon(icone2)
)
)
)
)
# UI
ui <- dashboardPage(skin="red",
HTML('<meta name="viewport" content="width=500, initial-scale=.5">'),
header = header,sidebar = sidebar,body = body)
server <- function(input,output){
#load_url("https://github.com/thspires/catalaodash/blob/master/CatalaoData.RData?raw=True")
par(mar=c(4,4,1,1),mgp=c(2.5,.5,.5))
output$today <- renderPlot({
plot(tmp~levels(factor(h$Dia2)),type="l",lwd=4,ylim=c(13.6,30),bty="l",ylab="Cota do rio (m)",axes=F,col="lightgrey",xlab="",cex.lab=1.2)
axis(1,at=meiodomes,labels=levels(h$Mes),col="white",col.ticks="black",cex.axis=1.1)
axis(2)
abline(h=seq(10,30,by=2.5),col="lightgrey",lty=3)
abline(h=c(20,26),col="darkgrey",lty=2)
points(h$Dia2[nrow(h)],h$Cota[nrow(h)],pch=20,col="#275171",cex=2)
lines(Cota~Dia2,subset(h,Ano==2020),lwd=3,col="steelblue")
text(1,26,"Cheia",col="darkgrey") ; text(1,20,"Seca",col="darkgrey")
text(h$Dia2[nrow(h)],h$Cota[nrow(h)]+1,paste(h$Dia[nrow(h)],"de",h$Mes[nrow(h)]),col="#275171")
legend(-10,17,legend=c("2020","Média histórica"),fill=c("steelblue","lightgrey"),border="white",bty="n")
})
output$hidrografa <- renderPlot({
plot(Cota~Dia2,subset(h,Ano==input$ano),type="l",lwd=4,ylim=c(13.6,30),bty="l",ylab="Cota do rio (m)",axes=F,col="black",xlim=c(1,365),xlab="")
axis(1,at=meiodomes,labels=levels(h$Mes),col="white",col.ticks="black",cex.axis=1.1)
axis(2)
abline(h=seq(10,30,by=2.5),col="lightgrey",lty=3)
abline(h=c(20,26),col="darkgrey",lty=2)
text(1,26,"Cheia",col="darkgrey") ; text(1,20,"Seca",col="darkgrey")
lines(tmp~levels(factor(h$Dia2)))
legend(-10,17,legend=c(input$ano,"Média histórica"),fill=c("black","lightgrey"),border="white",bty="n")
})
output$hidro2 <- renderPlot({
plot(Cota~Dia3,subset(h,Anohidro==input$anohidro),type="l",lwd=4,ylim=c(13.6,30),bty="l",ylab="Cota do rio (m)",axes=F,col="black",xlab="Dias hidrológicos (inicia no 1o dia de seca)")
text(1,30,paste(anogregs[[input$anohidro]],collapse=" e "),pos=4)
lines(tmp2~levels(factor(h$Dia3)),col="lightgrey")
axis(1);axis(2)
grid(col ="darkgrey")
legend(1,30,legend=c(input$anohidro,"Media histórica"),fill=c("black","lightgrey"),border="white",bty="n")
})
}
#
shinyApp(ui, server)
rsconnect::setAccountInfo(name='thspires',
token='C9B84363814F06B003619AC8A47AFFF7',
secret='RxZbig8m1Qsdg05HDRHQ2UfzoMYqz52e0GDUpbG8')
rsconnect::deployApp()
??deployApp
rsconnect::deployApp(appDir="/Users/tiagopires/Desktop/Catalao dashboard/",apppFiles="app.R")
rsconnect::deployApp(appDir="/Users/tiagopires/Desktop/Catalao dashboard/",appFiles="app.R")
# rm(list=ls());dev.off()
library(shiny)
library(shinydashboard)
library(rvest)
library(reshape2)
load_url <- function (url, ..., sha1 = NULL) {
# based very closely on code for devtools::source_url
stopifnot(is.character(url), length(url) == 1)
temp_file <- tempfile()
on.exit(unlink(temp_file))
request <- httr::GET(url)
httr::stop_for_status(request)
writeBin(httr::content(request, type = "raw"), temp_file)
file_sha1 <- digest::digest(file = temp_file, algo = "sha1")
if (is.null(sha1)) {
message("SHA-1 hash of file is ", file_sha1)
}
else {
if (nchar(sha1) < 6) {
stop("Supplied SHA-1 hash is too short (must be at least 6 characters)")
}
file_sha1 <- substr(file_sha1, 1, nchar(sha1))
if (!identical(file_sha1, sha1)) {
stop("SHA-1 hash of downloaded file (", file_sha1,
")\n  does not match expected value (", sha1,
")", call. = FALSE)
}
}
load(temp_file, envir = .GlobalEnv)
}
load_url("https://github.com/thspires/catalaodash/blob/master/CatalaoData.RData?raw=True")
# Para fazer a legenda do grafico com os meses em portugues
# dias ~15 de cada mes em numeros lineares (1 a 365)
meiodomes <- c()
for(i in 0:11){
dia <- 15*c(i)+(15*c(i+1))
meiodomes <- c(meiodomes,dia)}
# Pegar anos gregorianos que sao usados para o ano hidrologico
levels(as.factor(h$Ano[which(h$Anohidro==112)]))
anogregs <- list()
for(i in 1:max(h$Anohidro)){
anogregs[[i]] <- levels(as.factor(h$Ano[which(h$Anohidro==i)]))}
# BODY
body <- dashboardBody(
fluidRow(
box(width=12,title="Ano atual vs média histórica (desde 1903)",
plotOutput("today")
),
box(width=12,title="Hidrógrafas de todos os anos",
plotOutput("hidrografa"),
sliderInput(inputId="ano",label="Escolha o ano gregoriano",max=2020,min=1903,value=2020)
),
box(width=12,title="Anos hidrologicos",
plotOutput("hidro2"),
sliderInput(inputId="anohidro",label="Escolha o ano hidrologico",max=115,min=min(1),value=115)
)
)
)
# HEADER
header <- dashboardHeader(title="HIDROGRAFIA MEDIO AMAZONAS",
dropdownMenu(type="message",messageItem(from="Desenvolvedor",message="Contate-nos em\n thspires@gmail.com")))
# SIDEBAR
sidebar <- dashboardSidebar(
fluidRow(
box(width=12,title="Cota do dia",
valueBox(
value=cotahj,
color="red",
subtitle="metros",
icon=icon("ship")
)
),
box(width=12,title="Comparacao com ontem",
valueBox(
value=paste(abs(dif)*100,"cm"),
color="fuchsia",
subtitle=paste(sd),
icon=icon(icone)
)
),
box(width=12,title="Comparacao com o mesmo dia do ano passado",
valueBox(
value=paste(abs(dif2)*100,"cm"),
color="fuchsia",
subtitle=paste(sd2),
icon=icon(icone2)
)
)
)
)
# UI
ui <- dashboardPage(skin="red",
HTML('<meta name="viewport" content="width=500, initial-scale=.5">'),
header = header,sidebar = sidebar,body = body)
server <- function(input,output){
#load_url("https://github.com/thspires/catalaodash/blob/master/CatalaoData.RData?raw=True")
par(mar=c(4,4,1,1),mgp=c(2.5,.5,.5))
output$today <- renderPlot({
plot(tmp~levels(factor(h$Dia2)),type="l",lwd=4,ylim=c(13.6,30),bty="l",ylab="Cota do rio (m)",axes=F,col="lightgrey",xlab="",cex.lab=1.2)
axis(1,at=meiodomes,labels=levels(h$Mes),col="white",col.ticks="black",cex.axis=1.1)
axis(2)
abline(h=seq(10,30,by=2.5),col="lightgrey",lty=3)
abline(h=c(20,26),col="darkgrey",lty=2)
points(h$Dia2[nrow(h)],h$Cota[nrow(h)],pch=20,col="#275171",cex=2)
lines(Cota~Dia2,subset(h,Ano==2020),lwd=3,col="steelblue")
text(20,26,"Cheia",col="darkgrey") ; text(20,20,"Seca",col="darkgrey")
text(h$Dia2[nrow(h)],h$Cota[nrow(h)]+1,paste(h$Dia[nrow(h)],"de",h$Mes[nrow(h)]),col="#275171")
legend(-10,17,legend=c("2020","Média histórica"),fill=c("steelblue","lightgrey"),border="white",bty="n")
})
output$hidrografa <- renderPlot({
plot(Cota~Dia2,subset(h,Ano==input$ano),type="l",lwd=4,ylim=c(13.6,30),bty="l",ylab="Cota do rio (m)",axes=F,col="black",xlim=c(1,365),xlab="")
axis(1,at=meiodomes,labels=levels(h$Mes),col="white",col.ticks="black",cex.axis=1.1)
axis(2)
abline(h=seq(10,30,by=2.5),col="lightgrey",lty=3)
abline(h=c(20,26),col="darkgrey",lty=2)
text(20,26,"Cheia",col="darkgrey") ; text(20,20,"Seca",col="darkgrey")
lines(tmp~levels(factor(h$Dia2)))
legend(-10,17,legend=c(input$ano,"Média histórica"),fill=c("black","lightgrey"),border="white",bty="n")
})
output$hidro2 <- renderPlot({
plot(Cota~Dia3,subset(h,Anohidro==input$anohidro),type="l",lwd=4,ylim=c(13.6,30),bty="l",ylab="Cota do rio (m)",axes=F,col="black",xlab="Dias hidrológicos (inicia no 1o dia de seca)")
text(1,30,paste(anogregs[[input$anohidro]],collapse=" e "),pos=4)
lines(tmp2~levels(factor(h$Dia3)),col="lightgrey")
axis(1);axis(2)
grid(col ="darkgrey")
legend(1,30,legend=c(input$anohidro,"Media histórica"),fill=c("black","lightgrey"),border="white",bty="n")
})
}
#
shinyApp(ui, server)
# Read historical dataset of stage levels
h <- read.csv("https://raw.githubusercontent.com/thspires/catalaodash/master/Cotas.csv")
paste(h$Mes,h$Ano,sep="-")
# # # #
# Begin data scraping from portodemanaus
temp <- read_html(html_session("https://www.portodemanaus.com.br/?pagina=nivel-do-rio-negro-hoje"))
temp <- html_table(temp,fill=T)
ano <- gsub(".+de ","",temp[[2]][2,9])
temp <- data.frame(temp[[8]])
temp <- temp[,grep("Cota",temp[2,])]
names(temp) <- temp[1,]
temp <- temp[-c(1,2,34:38),]
temp$dia <- c(1:31)
temp <- melt(temp,id=c("dia"))
temp$value <- as.numeric(gsub(",","\\.",temp$value))
temp <- temp[!is.na(temp$value),]
temp <- temp[!is.na(temp$value),]
temp <- subset(temp,value!=0.00)
head(temp)
names(temp) <- c("Dia","Mes","Cota")
temp$Ano <- ano
temp <- temp[,c(2,1,4,3)]
temp$Estacao <- NA
temp$Estacao[is.na(temp$Estacao) & temp$Cota>26] <- "Cheia"
temp$Estacao[is.na(temp$Estacao) & temp$Cota<20] <- "Seca"
temp$Estacao[is.na(temp$Estacao) & temp$Cota>20 & temp$Cota < 26 & temp$Dia2 <150] <- "Enchente"
temp$Estacao[is.na(temp$Estacao)] <- "Cheia"
temp$Dia2 <- (h$Dia2[nrow(h)]+1) : (h$Dia2[nrow(h)]+nrow(temp))
temp$Anohidro <- h$Anohidro[nrow(h)]
h <- rbind(h,temp)
h$Dia3 <- NA; for(i in 1:max(h$Anohidro)){h$Dia3[which(h$Anohidro==i)] <- 1:length(h$Dia3[which(h$Anohidro==i)])}
h$Mes <- factor(h$Mes,levels=c("Janeiro","Fevereiro","Marco","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro"))
h$Ano <- as.numeric(h$Ano)
h$Anohidro <- as.numeric(h$Anohidro)
# Calcular medias para fazer hidrografa da serie historica
tmp <- tapply(h$Cota,h$Dia2,mean)
tmp2 <- tapply(h$Cota,h$Dia3,mean)
# Cota de hoje e diferenca com ontem
cotahj <- h$Cota[nrow(h)]
cotaontem <- h$Cota[nrow(h)-1]
dif <- round(cotahj - cotaontem,digits=2)
icone <- if (dif>0) "arrow-up" else "arrow-down"
sd <- if (dif>0) "subiu" else "desceu"
# Diferenca com o mesmo dia do ano paassado
anopassado <- h$Ano[nrow(h)]-1
hj_dia <- h$Dia2[nrow(h)]
subset(h,Ano=="2019" & Dia2==274)
cotaanopassado <- h[which(h$Ano==anopassado & h$Dia2==hj_dia),"Cota"]
dif2 <- round(cotahj - cotaanopassado,digits=2)
icone2 <- if (dif2>0) "arrow-up" else "arrow-down"
sd2 <- if (dif2>0) "mais alto" else "mais baixo"
# save this as .Rdata
save.image(file="/Users/tiagopires/Desktop/Catalao dashboard/Catalao Data/CatalaoData.RData")
# # #
# Add into github
setwd("/Users/tiagopires/Desktop/Catalao dashboard/Catalao Data")
system("git add .")
# Commiting
msg <- paste0("'Update of ",gsub(" .+","",Sys.time())," 2'")
system(paste("git commit -m",msg))
# Pushing
system("git push -u origin master")
# Deploy app
rsconnect::setAccountInfo(name='thspires',
token='C9B84363814F06B003619AC8A47AFFF7',
secret='RxZbig8m1Qsdg05HDRHQ2UfzoMYqz52e0GDUpbG8')
rsconnect::deployApp(appDir="/Users/tiagopires/Desktop/Catalao dashboard/",appFiles="app.R")
